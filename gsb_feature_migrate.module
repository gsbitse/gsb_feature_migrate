<?php
/**
 * @file
 * Code for the GSB Feature Migrate feature.
 */

include_once 'gsb_feature_migrate.features.inc';


/**
 * Implements hook_ctools_plugin_directory().
 */
function gsb_feature_migrate_ctools_plugin_directory($module, $plugin) {
  if ($module == 'feeds_tamper') {
    return 'plugins';
  }
}

/**
 * Implements hook_feeds_processor_targets_alter().
 *
 * Add Image:uri target that will not download the file, and will just use existing one.
 */
function gsb_feature_migrate_feeds_processor_targets_alter(&$targets, $entity_type, $bundle_name) {
  foreach (field_info_instances($entity_type, $bundle_name) as $name => $instance) {
    $info = field_info_field($name);

    if ($info['type'] ='image') {
      $targets[$name . ':uri_no_download'] = array(
        'name' => t('@label: URI without download', array('@label' => $instance['label'])),
        'callback' => 'gsb_feature_migrate_image_feeds_set_target',
        'description' => t('The URI of the @label field.', array('@label' => $instance['label'])),
        'real_target' => $name,
      );
    }
  }
}

/**
 * Callback for imagefield:uri_no_download target.
 */
function gsb_feature_migrate_image_feeds_set_target($source, $entity, $target, $value) {
  if (empty($value)) {
    return;
  }

  // Make sure $value is an array.
  if (!is_array($value)) {
    $value = array($value);
  }

  $entity_type = $source->importer->processor->entityType();
  $bundle = $source->importer->processor->bundle();

  list($field_name, $sub_field) = explode(':', $target, 2);
  $instance_info = field_info_instance($entity_type, $field_name, $bundle);
  $info = field_info_field($field_name);

  // Populate entity.
  $delta = 0;
  $field = isset($entity->$field_name) ? $entity->$field_name : array();

  foreach ($value as $v) {
    if ($info['cardinality'] == $delta) {
      break;
    }

    // Init file array.
    $field[LANGUAGE_NONE][$delta] = isset($field[LANGUAGE_NONE][$delta]) ? $field[LANGUAGE_NONE][$delta] : array();

    $file = file_uri_to_object($v);
    $field[LANGUAGE_NONE][$delta] += (array) $file;
    $field[LANGUAGE_NONE][$delta]['display'] = 1;

    $delta++;
  }

  $entity->$field_name = $field;
}

/**
 * Implements hook_menu().
 *
 * Add custom taxonomy import script callback.
 */
function gsb_feature_migrate_menu() {
  $items['taxonomy_import'] = array(
    'title' => 'Import taxonomies',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('gsb_feature_migrate_taxonomy_form'),
    'access arguments' => array('administer taxonomy'),
    'file' => 'gsb_feature_migrate_taxonomy.inc',
    'type' => MENU_CALLBACK,
  );

  return $items;
}
